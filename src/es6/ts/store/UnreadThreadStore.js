import { Weave } from "weavejs";
import ThreadStore from "./ThreadStore";
import AbstractStore from "./AbstractStore";
import Dispatcher from "../dispatcher/Dispatcher";
export class UnreadThreadStore extends AbstractStore {
    getCount() {
        var threads = ThreadStore.getAll();
        var unreadCount = 0;
        for (var id in threads) {
            if (!threads[id].lastMessage.isRead) {
                unreadCount++;
            }
        }
        return unreadCount;
    }
    clickThread() {
        Weave.getCallbacks(this).triggerCallbacks();
    }
    receiveRawMessages() {
        Weave.getCallbacks(this).triggerCallbacks();
    }
}
Weave.registerClass(UnreadThreadStore, "ChatApp.store.UnreadThreadStore", null, "UnreadThreadStore");
export default Dispatcher.root.requestObject("unread_thread_store", UnreadThreadStore, true);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVW5yZWFkVGhyZWFkU3RvcmUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi90cy9zdG9yZS9VbnJlYWRUaHJlYWRTdG9yZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiT0FDTyxFQUFDLEtBQUssRUFBQyxNQUFNLFNBQVM7T0FDdEIsV0FBVyxNQUFNLGVBQWU7T0FDaEMsYUFBYSxNQUFNLGlCQUFpQjtPQUNwQyxVQUFVLE1BQU0sMEJBQTBCO0FBRWpELHVDQUF1QyxhQUFhO0lBRTVDLFFBQVE7UUFFZCxJQUFJLE9BQU8sR0FBRyxXQUFXLENBQUMsTUFBTSxFQUFFLENBQUM7UUFDbkMsSUFBSSxXQUFXLEdBQUcsQ0FBQyxDQUFDO1FBQ3BCLEdBQUcsQ0FBQyxDQUFDLElBQUksRUFBRSxJQUFJLE9BQU8sQ0FBQyxDQUFDLENBQUM7WUFDeEIsRUFBRSxDQUFDLENBQUMsQ0FBQyxPQUFPLENBQUMsRUFBRSxDQUFDLENBQUMsV0FBVyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUM7Z0JBQ3JDLFdBQVcsRUFBRSxDQUFDO1lBQ2YsQ0FBQztRQUNGLENBQUM7UUFDRCxNQUFNLENBQUMsV0FBVyxDQUFDO0lBQ3BCLENBQUM7SUFFTSxXQUFXO1FBRWpCLEtBQUssQ0FBQyxZQUFZLENBQUMsSUFBSSxDQUFDLENBQUMsZ0JBQWdCLEVBQUUsQ0FBQztJQUM3QyxDQUFDO0lBRU0sa0JBQWtCO1FBRXhCLEtBQUssQ0FBQyxZQUFZLENBQUMsSUFBSSxDQUFDLENBQUMsZ0JBQWdCLEVBQUUsQ0FBQztJQUM3QyxDQUFDO0FBQ0YsQ0FBQztBQUNELEtBQUssQ0FBQyxhQUFhLENBQUMsaUJBQWlCLEVBQUUsaUNBQWlDLEVBQUUsSUFBSSxFQUFFLG1CQUFtQixDQUFDLENBQUM7QUFDckcsZUFBZSxVQUFVLENBQUMsSUFBSSxDQUFDLGFBQWEsQ0FBQyxxQkFBcUIsRUFBRSxpQkFBaUIsRUFBRSxJQUFJLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIHdlYXZlanMgZnJvbSBcIndlYXZlanNcIjtcbmltcG9ydCB7V2VhdmV9IGZyb20gXCJ3ZWF2ZWpzXCI7XG5pbXBvcnQgVGhyZWFkU3RvcmUgZnJvbSBcIi4vVGhyZWFkU3RvcmVcIjtcbmltcG9ydCBBYnN0cmFjdFN0b3JlIGZyb20gXCIuL0Fic3RyYWN0U3RvcmVcIjtcbmltcG9ydCBEaXNwYXRjaGVyIGZyb20gXCIuLi9kaXNwYXRjaGVyL0Rpc3BhdGNoZXJcIjtcblxuZXhwb3J0IGNsYXNzIFVucmVhZFRocmVhZFN0b3JlIGV4dGVuZHMgQWJzdHJhY3RTdG9yZVxue1xuXHRwdWJsaWMgZ2V0Q291bnQoKVxuXHR7XG5cdFx0dmFyIHRocmVhZHMgPSBUaHJlYWRTdG9yZS5nZXRBbGwoKTtcblx0XHR2YXIgdW5yZWFkQ291bnQgPSAwO1xuXHRcdGZvciAodmFyIGlkIGluIHRocmVhZHMpIHtcblx0XHRcdGlmICghdGhyZWFkc1tpZF0ubGFzdE1lc3NhZ2UuaXNSZWFkKSB7XG5cdFx0XHRcdHVucmVhZENvdW50Kys7XG5cdFx0XHR9XG5cdFx0fVxuXHRcdHJldHVybiB1bnJlYWRDb3VudDtcblx0fVxuXG5cdHB1YmxpYyBjbGlja1RocmVhZCgpXG5cdHtcblx0XHRXZWF2ZS5nZXRDYWxsYmFja3ModGhpcykudHJpZ2dlckNhbGxiYWNrcygpO1xuXHR9XG5cblx0cHVibGljIHJlY2VpdmVSYXdNZXNzYWdlcygpXG5cdHtcblx0XHRXZWF2ZS5nZXRDYWxsYmFja3ModGhpcykudHJpZ2dlckNhbGxiYWNrcygpO1xuXHR9XG59XG5XZWF2ZS5yZWdpc3RlckNsYXNzKFVucmVhZFRocmVhZFN0b3JlLCBcIkNoYXRBcHAuc3RvcmUuVW5yZWFkVGhyZWFkU3RvcmVcIiwgbnVsbCwgXCJVbnJlYWRUaHJlYWRTdG9yZVwiKTtcbmV4cG9ydCBkZWZhdWx0IERpc3BhdGNoZXIucm9vdC5yZXF1ZXN0T2JqZWN0KFwidW5yZWFkX3RocmVhZF9zdG9yZVwiLCBVbnJlYWRUaHJlYWRTdG9yZSwgdHJ1ZSk7Il19